/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.util.Date;
import org.example.database.AddressManager;
import org.example.database.DriverManager;
import org.example.database.SeatManager;
import org.example.database.TicketManager;
import org.example.database.TripManager;
import org.example.database.UserManager;
import org.example.database.VehicleManager;
import org.example.enums.Gender;
import org.example.enums.SeatType;
import org.example.enums.UserType;
import org.example.enums.VehicleType;
import org.example.model.Address;
import org.example.model.Driver;
import org.example.model.Seat;
import org.example.model.Ticket;
import org.example.model.Trip;
import org.example.model.User;
import org.example.model.Vehicle;
import org.example.utils.CommonUtils;
import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.*;

public class AppTest {

  private DriverManager driverManager;
  private SeatManager seatManager;
  private AddressManager addressManager;
  private TicketManager ticketManager;
  private TripManager tripManager;
  private UserManager userManager;
  private VehicleManager vehicleManager;

  @Before
  public void setUp() throws Exception {
    driverManager = new DriverManager();
    seatManager = new SeatManager();
    addressManager = new AddressManager();
    ticketManager = new TicketManager();
    tripManager = new TripManager();
    userManager = new UserManager();
    vehicleManager = new VehicleManager();

    setupData();
  }

  private void setupData() {
    //save addresses
    addressManager.saveAddress(
        Address.builder().street("church street").city("Bangalore").state("Karnataka")
            .country("India").pinCode(123456).build());
    addressManager.saveAddress(
        Address.builder().street("k street").city("Bangalore").state("Karnataka").country("India")
            .pinCode(123456).build());

    //save driver information
    driverManager.saveDriver(Driver.builder().name("test driver").age(20)
        .address(addressManager.getAddress(1L).orElse(null)).drivingLicenseNumber("test12345")
        .build());

    //save seats information
    seatManager.saveSeat(Seat.builder().seatType(SeatType.SLEEPER).build());
    seatManager.saveSeat(Seat.builder().seatType(SeatType.STANDARD).build());

    //save user information
    userManager.saveUser(
        User.builder().username("testuser").password("testpassword").email("testemail")
            .gender(Gender.MALE).phoneNumber("testphone").age(45).userType(UserType.CUSTOMER)
            .build());
    userManager.saveUser(
        User.builder().username("testuser2").password("testpassword2").email("testemail2")
            .gender(Gender.FEMALE).phoneNumber("testphone2").age(19).userType(UserType.CUSTOMER)
            .build());

    //save vehicle information
    vehicleManager.saveVehicle(
        Vehicle.builder().numberPlate("testvehicle").vehicleType(VehicleType.AC_BUS)
            .seats(seatManager.getAllSeats().stream().toList())
            .location(addressManager.getAddress(1L).orElse(null)).build());

    //create Trip
    tripManager.saveTrip(Trip.builder().startLocation(addressManager.getAddress(1L).orElse(null))
        .endLocation(addressManager.getAddress(2L).orElse(null)).scheduledStartTime(new Date())
        .scheduledEndTime(CommonUtils.addTime(new Date(), 5))
        .vehicle(vehicleManager.getVehicle(1L).orElse(null))
        .driver(driverManager.getDriver(1L).orElse(null)).build());

    //save Ticket information
    ticketManager.saveTicket(Ticket.builder().customer(userManager.getUser(1L).orElse(null))
        .seat(seatManager.getSeat(1L).orElse(null)).price(189.32).tripId(1L).build());
  }


  @Test
  public void appHasAGreeting() {
    App classUnderTest = new App();
    assertNotNull("app should have a greeting", classUnderTest.getGreeting());
  }
}
